/*
1013: 防水堤坝
时间限制: 1 Sec  内存限制: 128 MB
提交: 711  解决: 169
- 题目描述
在太平洋的一个小岛上，岛民想要建立一个环岛的堤坝，我们可以将小岛简化为一个二维平面，
你需要使用K条边（这些边要么是水平或者垂直长度为1的边，要么是45度倾斜的长度为sqrt(2)的边）围成一个多边形，
多边形的顶点必须位于整点，然后要让围成的多边形面积最大，你需要求出最大面积是多少。
- 输入
输入包含多个测试实例，每组实例给出一个数K。（3<=K<=2,000,000,000）
- 输出
每一行对应一个要求的答案。（—保留一位小数）
- 样例输入
3
4
5
6
- 样例输出
0.5
2.0
2.5
4.0
*/

// 画图找规律, 偏向数学解答
/*
规律:
1. 组成的图形都是由小三角形构成，每个小三角形的面积是0.5，需要寻找K和小三角形数量之间的关系。
2. 用K去除以4，这里的4，可以看做每4个三角形组成一个小正方形，组成整数个小正方形后，多余的小三角形个数，以10103030来循环。
3. K或者s为奇数时，面积存在 .5。K为偶数时，面积为整数。
原文链接：https://blog.csdn.net/Gong_Yihang/article/details/104986207
*/

#include <iostream>

void GetMaxArea(const long long& k) {
  long long x, y, ans;

  ans = 0;
  x = k / 4;
  y = k % 4;
  if (y < 2) {
    ans = 4 * x * x;
  } else {
    ans = 4 * x * (x + 1);
  }

  if (y == 1) {
    ans += 2 * x - 1;
  } else if (y == 3) {
    ans += 2 * x + 1;
  }

  if (ans & 1) {
    printf("%lld.5\n", ans / 2); // 奇数情况
  } else {
    printf("%lld.0\n", ans / 2); // 偶数情况
  }
}

int main() {
  long long k;
  // TODO:使用std::cin >> k会时间超时, why?
  while (scanf("%lld", &k) != EOF) {
    GetMaxArea(k);
  }
}